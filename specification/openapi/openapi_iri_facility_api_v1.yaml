openapi: 3.1.0
info:
  title: IRI Facility API
  description: This API implements the standard integrated research infrastructure
    specification for facility status.
  termsOfService: "IRI Facility API Copyright (c) 2025. The Regents of the University\
    \ of California, through Lawrence Berkeley National Laboratory (subject to receipt\
    \ of any required approvals from the U.S. Dept. of Energy).  All rights reserved."
  contact:
    name: The IRI Interfaces Subcommittee
    url: https://iri.science/ts/interfaces/
    email: software@es.net
  license:
    name: The 3-Clause BSD License
    url: https://opensource.org/license/bsd-3-clause/
  version: v1
servers:
- url: http://localhost:8081
  description: Generated server url
tags:
- name: IRI Account API
  description: Integrated Research Infrastructure Account API endpoint.
- name: IRI Facility API
  description: The Integrated Research Infrastructure Facility API endpoint.
- name: IRI Status API
  description: |-
    The Status API offers users programmatic access to information on the operational status of various resources within a facility, scheduled maintenance/outage events, and a limited historical record of these events. Designed for quick and efficient status checks of current and future (scheduled) operational status, this API allows developers to integrate facility information into applications or workflows, providing a streamlined way to programmatically access data without manual intervention.

    It should be noted that the operational status of a resource is not an indication of a commitment to provide service, only that the resource is in the described operational state.

    The Facility Status API is not intended for reporting or monitoring purposes; it does not support asynchronous logging or alerting capabilities, and should not be used to derive any type of up or downtime metrics. Instead, its primary focus is on delivering simple, on-demand access to facility resource status, and scheduled maintenance events.
paths:
  /api/v1:
    get:
      tags:
      - IRI Facility API
      - getMetaData
      summary: Get a list of facility API meta-data.
      description: Returns a list of available facility URL.
      operationId: getMetaData
      responses:
        "200":
          description: OK - Returns a list of available IRI resources matching the
            request criteria.
          headers:
            Content-Location:
              description: "Identifies the specific resource for the representation\
                \ you just returned. It provides a URI that, at the time the response\
                \ was generated, would return the same representation if dereferenced\
                \ with GET."
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Discovery"
        "401":
          description: Unauthorized - Requester is not authorized to access the requested
            resource.
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden - Requester is not authorized to access the requested
            resource.
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error - A generic error message given when
            an unexpected condition was encountered and a more specific message is
            not available.
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/status:
    get:
      tags:
      - IRI Status API
      - getMetaData
      summary: Get a list of facility status meta-data.
      description: Returns a list of available facility status URL.
      operationId: getMetaData_1
      responses:
        "200":
          description: OK - Returns a list of available IRI resources matching the
            request criteria.
          headers:
            Content-Location:
              description: "Identifies the specific resource for the representation\
                \ you just returned. It provides a URI that, at the time the response\
                \ was generated, would return the same representation if dereferenced\
                \ with GET."
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Discovery"
        "401":
          description: Unauthorized - Requester is not authorized to access the requested
            resource.
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden - Requester is not authorized to access the requested
            resource.
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error - A generic error message given when
            an unexpected condition was encountered and a more specific message is
            not available.
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/status/resources:
    get:
      tags:
      - getResources
      - IRI Status API
      summary: Get a collection of IRI resources.
      description: Returns a list of IRI resources matching the query.
      operationId: getResources
      parameters:
      - name: Accept
        in: header
        description: Provides media types that are acceptable for the response. At
          the moment application/json is the supported response encoding.
        required: false
        schema:
          type: string
          default: application/json
      - name: If-Modified-Since
        in: header
        description: The HTTP request may contain the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in RFC 1123 format.
        required: false
        schema:
          type: string
      - name: modified_since
        in: query
        description: A query parameter imitating the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in ISO 8601 format.
        required: false
        schema:
          type: string
          format: date-time
      - name: name
        in: query
        description: The name of the resource.
        required: false
        schema:
          type: string
      - name: offset
        in: query
        description: "An integer value specifying the starting number of resource\
          \ to return, where 0 is the first resource based on identifier sorted order."
        required: false
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: "An integer value specifying the maximum number of resources\
          \ to return, where 100 is the default limit.  Use offset query parameter\
          \ to navigate retrieval of complete set."
        required: false
        schema:
          type: integer
          default: 100
      - name: resource_type
        in: query
        description: Return only resources of this type.
        required: false
        schema:
          type: string
      - name: capability
        in: query
        description: Return only resources with this capability.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: current_status
        in: query
        description: Return only resources with these status values.
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK - Returns a list of available IRI resources matching the
            request criteria.
          headers:
            Content-Location:
              description: "Identifies the specific resource for the representation\
                \ you just returned. It provides a URI that, at the time the response\
                \ was generated, would return the same representation if dereferenced\
                \ with GET."
              style: simple
              schema:
                type: string
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Resource"
        "304":
          description: Not Modified - The requested resource was not modified.
          headers:
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
        "400":
          description: Bad Request - The server due to malformed syntax or invalid
            query parameters could not understand the client’s request.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error - A generic error message given when
            an unexpected condition was encountered and a more specific message is
            not available.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/status/resources/{resource_id}:
    get:
      tags:
      - getResource
      - IRI Status API
      summary: Get the IRI resource associated with the specified id.
      description: Returns the matching IRI resource.
      operationId: getResource
      parameters:
      - name: Accept
        in: header
        description: Provides media types that are acceptable for the response. At
          the moment application/json is the supported response encoding.
        required: false
        schema:
          type: string
          default: application/json
      - name: If-Modified-Since
        in: header
        description: The HTTP request may contain the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in RFC 1123 format.
        required: false
        schema:
          type: string
      - name: modified_since
        in: query
        description: A query parameter imitating the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in ISO 8601 format.
        required: false
        schema:
          type: string
          format: date-time
      - name: resource_id
        in: path
        description: resource_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK - Returns a list of available IRI resources matching the
            request criteria.
          headers:
            Content-Location:
              description: "Identifies the specific resource for the representation\
                \ you just returned. It provides a URI that, at the time the response\
                \ was generated, would return the same representation if dereferenced\
                \ with GET."
              style: simple
              schema:
                type: string
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Resource"
        "304":
          description: Not Modified - The requested resource was not modified.
          headers:
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
        "404":
          description: Not Found - The provider is not currently capable of serving
            resource models.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "400":
          description: Bad Request - The server due to malformed syntax or invalid
            query parameters could not understand the client’s request.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error - A generic error message given when
            an unexpected condition was encountered and a more specific message is
            not available.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/status/incidents:
    get:
      tags:
      - IRI Status API
      - getIncidents
      summary: Get a list of available incident resources.
      description: Returns a list of incident resources matching the specified query
      operationId: getIncidents
      parameters:
      - name: Accept
        in: header
        description: Provides media types that are acceptable for the response. At
          the moment application/json is the supported response encoding.
        required: false
        schema:
          type: string
          default: application/json
      - name: If-Modified-Since
        in: header
        description: The HTTP request may contain the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in RFC 1123 format.
        required: false
        schema:
          type: string
      - name: modified_since
        in: query
        description: A query parameter imitating the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in ISO 8601 format.
        required: false
        schema:
          type: string
          format: date-time
      - name: name
        in: query
        description: The name of the resource.
        required: false
        schema:
          type: string
      - name: offset
        in: query
        description: "An integer value specifying the starting number of resource\
          \ to return, where 0 is the first resource based on identifier sorted order."
        required: false
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: "An integer value specifying the maximum number of resources\
          \ to return, where 100 is the default limit.  Use offset query parameter\
          \ to navigate retrieval of complete set."
        required: false
        schema:
          type: integer
          default: 100
      - name: status
        in: query
        description: The status of a resource.
        required: false
        schema:
          type: string
          description: The status of a resource.
          enum:
          - up
          - degraded
          - down
          - unknown
      - name: type
        in: query
        description: The type of incident.
        required: false
        schema:
          type: string
          description: The type of incident.
          enum:
          - planned
          - unplanned
          - reservation
      - name: resolution
        in: query
        description: The type of resolution to the incident.
        required: false
        schema:
          type: string
          description: The current state of the incident resolution.
          enum:
          - unresolved
          - cancelled
          - completed
          - extended
          - pending
      - name: time
        in: query
        description: "Search for incidents overlapping with time, where start <= time\
          \ <= end.  The time query parameter must be in ISO 8601 format with timezone\
          \ offsets."
        required: false
        schema:
          type: string
          format: date-time
      - name: from
        in: query
        description: Search for incidents/events that are active after (and including)
          the specified from time.  The from query parameter must be in ISO 8601 format
          with timezone offsets.
        required: false
        schema:
          type: string
          format: date-time
      - name: to
        in: query
        description: Search for incidents/events that are active before (and including)
          the specified 'to' time.  The from query parameter must be in ISO 8601 format
          with timezone offsets.
        required: false
        schema:
          type: string
          format: date-time
      - name: short_name
        in: query
        description: The short name of the resource.
        required: false
        schema:
          type: string
      - name: resources
        in: query
        description: A list of resources to match.
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK - Returns a list of available IRI resources matching the
            request criteria.
          headers:
            Content-Location:
              description: "Identifies the specific resource for the representation\
                \ you just returned. It provides a URI that, at the time the response\
                \ was generated, would return the same representation if dereferenced\
                \ with GET."
              style: simple
              schema:
                type: string
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Incident"
        "304":
          description: Not Modified - The requested resource was not modified.
          headers:
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
        "400":
          description: Bad Request - The server due to malformed syntax or invalid
            query parameters could not understand the client’s request.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error - A generic error message given when
            an unexpected condition was encountered and a more specific message is
            not available.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/status/incidents/{incident_id}:
    get:
      tags:
      - getIncident
      - IRI Status API
      summary: Get the incident resource associated with the specified id.
      description: Returns the matching incident resource.
      operationId: getIncident
      parameters:
      - name: Accept
        in: header
        description: Provides media types that are acceptable for the response. At
          the moment application/json is the supported response encoding.
        required: false
        schema:
          type: string
          default: application/json
      - name: If-Modified-Since
        in: header
        description: The HTTP request may contain the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in RFC 1123 format.
        required: false
        schema:
          type: string
      - name: modified_since
        in: query
        description: A query parameter imitating the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in ISO 8601 format.
        required: false
        schema:
          type: string
          format: date-time
      - name: incident_id
        in: path
        description: incident_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK - Returns a list of available IRI resources matching the
            request criteria.
          headers:
            Content-Location:
              description: "Identifies the specific resource for the representation\
                \ you just returned. It provides a URI that, at the time the response\
                \ was generated, would return the same representation if dereferenced\
                \ with GET."
              style: simple
              schema:
                type: string
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Incident"
        "304":
          description: Not Modified - The requested resource was not modified.
          headers:
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
        "404":
          description: Not Found - The provider is not currently capable of serving
            resource models.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "400":
          description: Bad Request - The server due to malformed syntax or invalid
            query parameters could not understand the client’s request.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error - A generic error message given when
            an unexpected condition was encountered and a more specific message is
            not available.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/status/incidents/{incident_id}/events:
    get:
      tags:
      - getEventsByIncident
      - IRI Status API
      summary: Get the events associated with the specified incident.
      description: RReturns the events associated with the specified incident.
      operationId: getEventsByIncident
      parameters:
      - name: Accept
        in: header
        description: Provides media types that are acceptable for the response. At
          the moment application/json is the supported response encoding.
        required: false
        schema:
          type: string
          default: application/json
      - name: If-Modified-Since
        in: header
        description: The HTTP request may contain the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in RFC 1123 format.
        required: false
        schema:
          type: string
      - name: modified_since
        in: query
        description: A query parameter imitating the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in ISO 8601 format.
        required: false
        schema:
          type: string
          format: date-time
      - name: name
        in: query
        description: The name of the resource.
        required: false
        schema:
          type: string
      - name: offset
        in: query
        description: "An integer value specifying the starting number of resource\
          \ to return, where 0 is the first resource based on identifier sorted order."
        required: false
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: "An integer value specifying the maximum number of resources\
          \ to return, where 100 is the default limit.  Use offset query parameter\
          \ to navigate retrieval of complete set."
        required: false
        schema:
          type: integer
          default: 100
      - name: incident_id
        in: path
        description: incident_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK - Returns a list of available IRI resources matching the
            request criteria.
          headers:
            Content-Location:
              description: "Identifies the specific resource for the representation\
                \ you just returned. It provides a URI that, at the time the response\
                \ was generated, would return the same representation if dereferenced\
                \ with GET."
              style: simple
              schema:
                type: string
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Event"
        "304":
          description: Not Modified - The requested resource was not modified.
          headers:
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
        "404":
          description: Not Found - The provider is not currently capable of serving
            resource models.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "400":
          description: Bad Request - The server due to malformed syntax or invalid
            query parameters could not understand the client’s request.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error - A generic error message given when
            an unexpected condition was encountered and a more specific message is
            not available.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/status/events:
    get:
      tags:
      - getEvents
      - IRI Status API
      summary: Get a list of event resources.
      description: Returns a list of event resources matching the specified query
      operationId: getEvents
      parameters:
      - name: Accept
        in: header
        description: Provides media types that are acceptable for the response. At
          the moment application/json is the supported response encoding.
        required: false
        schema:
          type: string
          default: application/json
      - name: If-Modified-Since
        in: header
        description: The HTTP request may contain the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in RFC 1123 format.
        required: false
        schema:
          type: string
      - name: modified_since
        in: query
        description: A query parameter imitating the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in ISO 8601 format.
        required: false
        schema:
          type: string
          format: date-time
      - name: name
        in: query
        description: The name of the resource.
        required: false
        schema:
          type: string
      - name: offset
        in: query
        description: "An integer value specifying the starting number of resource\
          \ to return, where 0 is the first resource based on identifier sorted order."
        required: false
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: "An integer value specifying the maximum number of resources\
          \ to return, where 100 is the default limit.  Use offset query parameter\
          \ to navigate retrieval of complete set."
        required: false
        schema:
          type: integer
          default: 100
      - name: status
        in: query
        description: The status of a resource.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: from
        in: query
        description: Search for incidents/events that are active after (and including)
          the specified from time.  The from query parameter must be in ISO 8601 format
          with timezone offsets.
        required: false
        schema:
          type: string
      - name: to
        in: query
        description: Search for incidents/events that are active before (and including)
          the specified 'to' time.  The from query parameter must be in ISO 8601 format
          with timezone offsets.
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK - Returns a list of available IRI resources matching the
            request criteria.
          headers:
            Content-Location:
              description: "Identifies the specific resource for the representation\
                \ you just returned. It provides a URI that, at the time the response\
                \ was generated, would return the same representation if dereferenced\
                \ with GET."
              style: simple
              schema:
                type: string
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Event"
        "304":
          description: Not Modified - The requested resource was not modified.
          headers:
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
        "400":
          description: Bad Request - The server due to malformed syntax or invalid
            query parameters could not understand the client’s request.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error - A generic error message given when
            an unexpected condition was encountered and a more specific message is
            not available.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/status/events/{event_id}:
    get:
      tags:
      - getEvent
      - IRI Status API
      summary: Get the event associated with the specified id.
      description: Returns the event associated with the specified id.
      operationId: getEvent
      parameters:
      - name: Accept
        in: header
        description: Provides media types that are acceptable for the response. At
          the moment application/json is the supported response encoding.
        required: false
        schema:
          type: string
          default: application/json
      - name: If-Modified-Since
        in: header
        description: The HTTP request may contain the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in RFC 1123 format.
        required: false
        schema:
          type: string
      - name: modified_since
        in: query
        description: A query parameter imitating the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in ISO 8601 format.
        required: false
        schema:
          type: string
          format: date-time
      - name: event_id
        in: path
        description: event_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK - Returns a list of available IRI resources matching the
            request criteria.
          headers:
            Content-Location:
              description: "Identifies the specific resource for the representation\
                \ you just returned. It provides a URI that, at the time the response\
                \ was generated, would return the same representation if dereferenced\
                \ with GET."
              style: simple
              schema:
                type: string
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
        "304":
          description: Not Modified - The requested resource was not modified.
          headers:
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
        "404":
          description: Not Found - The provider is not currently capable of serving
            resource models.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "400":
          description: Bad Request - The server due to malformed syntax or invalid
            query parameters could not understand the client’s request.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error - A generic error message given when
            an unexpected condition was encountered and a more specific message is
            not available.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/status/events/{event_id}/resource:
    get:
      tags:
      - getResourceByEvent
      - IRI Status API
      summary: Get the resource impacted by the specified event.
      description: Returns the resource impacted by the specified event.
      operationId: getResourceByEvent
      parameters:
      - name: Accept
        in: header
        description: Provides media types that are acceptable for the response. At
          the moment application/json is the supported response encoding.
        required: false
        schema:
          type: string
          default: application/json
      - name: If-Modified-Since
        in: header
        description: The HTTP request may contain the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in RFC 1123 format.
        required: false
        schema:
          type: string
      - name: modified_since
        in: query
        description: A query parameter imitating the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in ISO 8601 format.
        required: false
        schema:
          type: string
          format: date-time
      - name: event_id
        in: path
        description: event_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK - Returns a list of available IRI resources matching the
            request criteria.
          headers:
            Content-Location:
              description: "Identifies the specific resource for the representation\
                \ you just returned. It provides a URI that, at the time the response\
                \ was generated, would return the same representation if dereferenced\
                \ with GET."
              style: simple
              schema:
                type: string
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Resource"
        "304":
          description: Not Modified - The requested resource was not modified.
          headers:
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
        "404":
          description: Not Found - The provider is not currently capable of serving
            resource models.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "400":
          description: Bad Request - The server due to malformed syntax or invalid
            query parameters could not understand the client’s request.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error - A generic error message given when
            an unexpected condition was encountered and a more specific message is
            not available.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/status/events/{event_id}/incident:
    get:
      tags:
      - getIncidentByEvent
      - IRI Status API
      summary: Get the incident related to the specified event.
      description: Returns the incident related to the specified event.
      operationId: getIncidentByEvent
      parameters:
      - name: Accept
        in: header
        description: Provides media types that are acceptable for the response. At
          the moment application/json is the supported response encoding.
        required: false
        schema:
          type: string
          default: application/json
      - name: If-Modified-Since
        in: header
        description: The HTTP request may contain the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in RFC 1123 format.
        required: false
        schema:
          type: string
      - name: modified_since
        in: query
        description: A query parameter imitating the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in ISO 8601 format.
        required: false
        schema:
          type: string
          format: date-time
      - name: event_id
        in: path
        description: event_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK - Returns a list of available IRI resources matching the
            request criteria.
          headers:
            Content-Location:
              description: "Identifies the specific resource for the representation\
                \ you just returned. It provides a URI that, at the time the response\
                \ was generated, would return the same representation if dereferenced\
                \ with GET."
              style: simple
              schema:
                type: string
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Incident"
        "304":
          description: Not Modified - The requested resource was not modified.
          headers:
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
        "404":
          description: Not Found - The provider is not currently capable of serving
            resource models.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "400":
          description: Bad Request - The server due to malformed syntax or invalid
            query parameters could not understand the client’s request.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error - A generic error message given when
            an unexpected condition was encountered and a more specific message is
            not available.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/facility:
    get:
      tags:
      - getFacility
      - IRI Facility API
      summary: Get the facility resource associated with this endpoint.
      description: Returns the facility resource associated with this endpoint.
      operationId: getFacility
      parameters:
      - name: Accept
        in: header
        description: Provides media types that are acceptable for the response. At
          the moment application/json is the supported response encoding.
        required: false
        schema:
          type: string
          default: application/json
      - name: If-Modified-Since
        in: header
        description: The HTTP request may contain the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in RFC 1123 format.
        required: false
        schema:
          type: string
      - name: modified_since
        in: query
        description: A query parameter imitating the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in ISO 8601 format.
        required: false
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: OK - Returns a list of available IRI resources matching the
            request criteria.
          headers:
            Content-Location:
              description: "Identifies the specific resource for the representation\
                \ you just returned. It provides a URI that, at the time the response\
                \ was generated, would return the same representation if dereferenced\
                \ with GET."
              style: simple
              schema:
                type: string
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Facility"
        "304":
          description: Not Modified - The requested resource was not modified.
          headers:
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
        "400":
          description: Bad Request - The server due to malformed syntax or invalid
            query parameters could not understand the client’s request.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error - A generic error message given when
            an unexpected condition was encountered and a more specific message is
            not available.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/facility/sites:
    get:
      tags:
      - getSites
      - IRI Facility API
      summary: Get a list of sites associated with a facility.
      description: Returns a list of IRI resources matching the query.
      operationId: getSites
      parameters:
      - name: Accept
        in: header
        description: Provides media types that are acceptable for the response. At
          the moment application/json is the supported response encoding.
        required: false
        schema:
          type: string
          default: application/json
      - name: If-Modified-Since
        in: header
        description: The HTTP request may contain the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in RFC 1123 format.
        required: false
        schema:
          type: string
      - name: modified_since
        in: query
        description: A query parameter imitating the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in ISO 8601 format.
        required: false
        schema:
          type: string
          format: date-time
      - name: name
        in: query
        description: The name of the resource.
        required: false
        schema:
          type: string
      - name: offset
        in: query
        description: "An integer value specifying the starting number of resource\
          \ to return, where 0 is the first resource based on identifier sorted order."
        required: false
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: "An integer value specifying the maximum number of resources\
          \ to return, where 100 is the default limit.  Use offset query parameter\
          \ to navigate retrieval of complete set."
        required: false
        schema:
          type: integer
          default: 100
      - name: short_name
        in: query
        description: The short name of the resource.
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK - Returns a list of available IRI resources matching the
            request criteria.
          headers:
            Content-Location:
              description: "Identifies the specific resource for the representation\
                \ you just returned. It provides a URI that, at the time the response\
                \ was generated, would return the same representation if dereferenced\
                \ with GET."
              style: simple
              schema:
                type: string
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Site"
        "304":
          description: Not Modified - The requested resource was not modified.
          headers:
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
        "400":
          description: Bad Request - The server due to malformed syntax or invalid
            query parameters could not understand the client’s request.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error - A generic error message given when
            an unexpected condition was encountered and a more specific message is
            not available.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/facility/sites/{site_id}:
    get:
      tags:
      - IRI Facility API
      - getSite
      summary: Get the site associated with the specified id.
      description: Returns the site matching the specified id.
      operationId: getSite
      parameters:
      - name: Accept
        in: header
        description: Provides media types that are acceptable for the response. At
          the moment application/json is the supported response encoding.
        required: false
        schema:
          type: string
          default: application/json
      - name: If-Modified-Since
        in: header
        description: The HTTP request may contain the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in RFC 1123 format.
        required: false
        schema:
          type: string
      - name: modified_since
        in: query
        description: A query parameter imitating the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in ISO 8601 format.
        required: false
        schema:
          type: string
          format: date-time
      - name: site_id
        in: path
        description: The UUID uniquely identifying the IRI site resource.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK - Returns a list of available IRI resources matching the
            request criteria.
          headers:
            Content-Location:
              description: "Identifies the specific resource for the representation\
                \ you just returned. It provides a URI that, at the time the response\
                \ was generated, would return the same representation if dereferenced\
                \ with GET."
              style: simple
              schema:
                type: string
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Site"
        "304":
          description: Not Modified - The requested resource was not modified.
          headers:
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
        "404":
          description: Not Found - The provider is not currently capable of serving
            resource models.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "400":
          description: Bad Request - The server due to malformed syntax or invalid
            query parameters could not understand the client’s request.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error - A generic error message given when
            an unexpected condition was encountered and a more specific message is
            not available.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/facility/sites/{site_id}/location:
    get:
      tags:
      - getLocationBySite
      - IRI Facility API
      summary: Get the location related to the specified site.
      description: Returns the location related to the specified site.
      operationId: getLocationBySite
      parameters:
      - name: Accept
        in: header
        description: Provides media types that are acceptable for the response. At
          the moment application/json is the supported response encoding.
        required: false
        schema:
          type: string
          default: application/json
      - name: If-Modified-Since
        in: header
        description: The HTTP request may contain the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in RFC 1123 format.
        required: false
        schema:
          type: string
      - name: modified_since
        in: query
        description: A query parameter imitating the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in ISO 8601 format.
        required: false
        schema:
          type: string
          format: date-time
      - name: site_id
        in: path
        description: site_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK - Returns a list of available IRI resources matching the
            request criteria.
          headers:
            Content-Location:
              description: "Identifies the specific resource for the representation\
                \ you just returned. It provides a URI that, at the time the response\
                \ was generated, would return the same representation if dereferenced\
                \ with GET."
              style: simple
              schema:
                type: string
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Location"
        "304":
          description: Not Modified - The requested resource was not modified.
          headers:
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
        "404":
          description: Not Found - The provider is not currently capable of serving
            resource models.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "400":
          description: Bad Request - The server due to malformed syntax or invalid
            query parameters could not understand the client’s request.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error - A generic error message given when
            an unexpected condition was encountered and a more specific message is
            not available.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/facility/locations:
    get:
      tags:
      - IRI Facility API
      - getLocations
      summary: Get a list of locations associated with a facility.
      description: Returns a list of locations matching the query.
      operationId: getLocations
      parameters:
      - name: Accept
        in: header
        description: Provides media types that are acceptable for the response. At
          the moment application/json is the supported response encoding.
        required: false
        schema:
          type: string
          default: application/json
      - name: If-Modified-Since
        in: header
        description: The HTTP request may contain the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in RFC 1123 format.
        required: false
        schema:
          type: string
      - name: modified_since
        in: query
        description: A query parameter imitating the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in ISO 8601 format.
        required: false
        schema:
          type: string
          format: date-time
      - name: name
        in: query
        description: The name of the resource.
        required: false
        schema:
          type: string
      - name: offset
        in: query
        description: "An integer value specifying the starting number of resource\
          \ to return, where 0 is the first resource based on identifier sorted order."
        required: false
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: "An integer value specifying the maximum number of resources\
          \ to return, where 100 is the default limit.  Use offset query parameter\
          \ to navigate retrieval of complete set."
        required: false
        schema:
          type: integer
          default: 100
      - name: short_name
        in: query
        description: The short name of the resource.
        required: false
        schema:
          type: string
      - name: country_name
        in: query
        description: The country name in which a resource resides.
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK - Returns a list of available IRI resources matching the
            request criteria.
          headers:
            Content-Location:
              description: "Identifies the specific resource for the representation\
                \ you just returned. It provides a URI that, at the time the response\
                \ was generated, would return the same representation if dereferenced\
                \ with GET."
              style: simple
              schema:
                type: string
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Location"
        "304":
          description: Not Modified - The requested resource was not modified.
          headers:
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
        "400":
          description: Bad Request - The server due to malformed syntax or invalid
            query parameters could not understand the client’s request.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error - A generic error message given when
            an unexpected condition was encountered and a more specific message is
            not available.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/facility/locations/{location_id}:
    get:
      tags:
      - getLocation
      - IRI Facility API
      summary: Get the IRI Location associated with the specified id.
      description: Returns the matching IRI location.
      operationId: getLocation
      parameters:
      - name: Accept
        in: header
        description: Provides media types that are acceptable for the response. At
          the moment application/json is the supported response encoding.
        required: false
        schema:
          type: string
          default: application/json
      - name: If-Modified-Since
        in: header
        description: The HTTP request may contain the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in RFC 1123 format.
        required: false
        schema:
          type: string
      - name: modified_since
        in: query
        description: A query parameter imitating the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in ISO 8601 format.
        required: false
        schema:
          type: string
          format: date-time
      - name: location_id
        in: path
        description: location_id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK - Returns a list of available IRI resources matching the
            request criteria.
          headers:
            Content-Location:
              description: "Identifies the specific resource for the representation\
                \ you just returned. It provides a URI that, at the time the response\
                \ was generated, would return the same representation if dereferenced\
                \ with GET."
              style: simple
              schema:
                type: string
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Location"
        "304":
          description: Not Modified - The requested resource was not modified.
          headers:
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
        "404":
          description: Not Found - The provider is not currently capable of serving
            resource models.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "400":
          description: Bad Request - The server due to malformed syntax or invalid
            query parameters could not understand the client’s request.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error - A generic error message given when
            an unexpected condition was encountered and a more specific message is
            not available.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/account:
    get:
      tags:
      - IRI Account API
      - getMetaData
      summary: Get a list of facility account meta-data.
      description: Returns a list of available facility account URL.
      operationId: getMetaData_2
      responses:
        "200":
          description: OK - Returns a list of available IRI resources matching the
            request criteria.
          headers:
            Content-Location:
              description: "Identifies the specific resource for the representation\
                \ you just returned. It provides a URI that, at the time the response\
                \ was generated, would return the same representation if dereferenced\
                \ with GET."
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Discovery"
        "401":
          description: Unauthorized - Requester is not authorized to access the requested
            resource.
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden - Requester is not authorized to access the requested
            resource.
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error - A generic error message given when
            an unexpected condition was encountered and a more specific message is
            not available.
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/account/user_allocations:
    get:
      tags:
      - IRI Account API
      - getUserAllocations
      summary: Get a list of user allocations associated with a facility.
      description: Returns a list of IRI user allocations matching the query.
      operationId: getUserAllocations
      parameters:
      - name: Accept
        in: header
        description: Provides media types that are acceptable for the response. At
          the moment application/json is the supported response encoding.
        required: false
        schema:
          type: string
          default: application/json
      - name: If-Modified-Since
        in: header
        description: The HTTP request may contain the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in RFC 1123 format.
        required: false
        schema:
          type: string
      - name: modified_since
        in: query
        description: A query parameter imitating the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in ISO 8601 format.
        required: false
        schema:
          type: string
          format: date-time
      - name: name
        in: query
        description: The name of the resource.
        required: false
        schema:
          type: string
      - name: offset
        in: query
        description: "An integer value specifying the starting number of resource\
          \ to return, where 0 is the first resource based on identifier sorted order."
        required: false
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: "An integer value specifying the maximum number of resources\
          \ to return, where 100 is the default limit.  Use offset query parameter\
          \ to navigate retrieval of complete set."
        required: false
        schema:
          type: integer
          default: 100
      responses:
        "200":
          description: OK - Returns a list of available IRI resources matching the
            request criteria.
          headers:
            Content-Location:
              description: "Identifies the specific resource for the representation\
                \ you just returned. It provides a URI that, at the time the response\
                \ was generated, would return the same representation if dereferenced\
                \ with GET."
              style: simple
              schema:
                type: string
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserAllocation"
        "304":
          description: Not Modified - The requested resource was not modified.
          headers:
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
        "400":
          description: Bad Request - The server due to malformed syntax or invalid
            query parameters could not understand the client’s request.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error - A generic error message given when
            an unexpected condition was encountered and a more specific message is
            not available.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/account/user_allocations/{user_allocation_id}:
    get:
      tags:
      - getUserAllocation
      - IRI Account API
      summary: Get the user allocation associated with the specified id.
      description: Returns the user allocation matching the specified id.
      operationId: getUserAllocation
      parameters:
      - name: Accept
        in: header
        description: Provides media types that are acceptable for the response. At
          the moment application/json is the supported response encoding.
        required: false
        schema:
          type: string
          default: application/json
      - name: If-Modified-Since
        in: header
        description: The HTTP request may contain the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in RFC 1123 format.
        required: false
        schema:
          type: string
      - name: modified_since
        in: query
        description: A query parameter imitating the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in ISO 8601 format.
        required: false
        schema:
          type: string
          format: date-time
      - name: user_allocation_id
        in: path
        description: The UUID uniquely identifying the IRI user allocation resource.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK - Returns a list of available IRI resources matching the
            request criteria.
          headers:
            Content-Location:
              description: "Identifies the specific resource for the representation\
                \ you just returned. It provides a URI that, at the time the response\
                \ was generated, would return the same representation if dereferenced\
                \ with GET."
              style: simple
              schema:
                type: string
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAllocation"
        "304":
          description: Not Modified - The requested resource was not modified.
          headers:
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
        "404":
          description: Not Found - The provider is not currently capable of serving
            resource models.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "400":
          description: Bad Request - The server due to malformed syntax or invalid
            query parameters could not understand the client’s request.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error - A generic error message given when
            an unexpected condition was encountered and a more specific message is
            not available.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/account/projects:
    get:
      tags:
      - getProjects
      - IRI Account API
      summary: Get a list of projects associated with a facility.
      description: Returns a list of IRI projects matching the query.
      operationId: getProjects
      parameters:
      - name: Accept
        in: header
        description: Provides media types that are acceptable for the response. At
          the moment application/json is the supported response encoding.
        required: false
        schema:
          type: string
          default: application/json
      - name: If-Modified-Since
        in: header
        description: The HTTP request may contain the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in RFC 1123 format.
        required: false
        schema:
          type: string
      - name: modified_since
        in: query
        description: A query parameter imitating the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in ISO 8601 format.
        required: false
        schema:
          type: string
          format: date-time
      - name: name
        in: query
        description: The name of the resource.
        required: false
        schema:
          type: string
      - name: offset
        in: query
        description: "An integer value specifying the starting number of resource\
          \ to return, where 0 is the first resource based on identifier sorted order."
        required: false
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: "An integer value specifying the maximum number of resources\
          \ to return, where 100 is the default limit.  Use offset query parameter\
          \ to navigate retrieval of complete set."
        required: false
        schema:
          type: integer
          default: 100
      - name: user_ids
        in: query
        description: Return only projects containing any of the listed users.
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK - Returns a list of available IRI resources matching the
            request criteria.
          headers:
            Content-Location:
              description: "Identifies the specific resource for the representation\
                \ you just returned. It provides a URI that, at the time the response\
                \ was generated, would return the same representation if dereferenced\
                \ with GET."
              style: simple
              schema:
                type: string
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Project"
        "304":
          description: Not Modified - The requested resource was not modified.
          headers:
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
        "400":
          description: Bad Request - The server due to malformed syntax or invalid
            query parameters could not understand the client’s request.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error - A generic error message given when
            an unexpected condition was encountered and a more specific message is
            not available.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/account/projects/{project_id}:
    get:
      tags:
      - IRI Account API
      - getProject
      summary: Get the project associated with the specified id.
      description: Returns the project matching the specified id.
      operationId: getProject
      parameters:
      - name: Accept
        in: header
        description: Provides media types that are acceptable for the response. At
          the moment application/json is the supported response encoding.
        required: false
        schema:
          type: string
          default: application/json
      - name: If-Modified-Since
        in: header
        description: The HTTP request may contain the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in RFC 1123 format.
        required: false
        schema:
          type: string
      - name: modified_since
        in: query
        description: A query parameter imitating the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in ISO 8601 format.
        required: false
        schema:
          type: string
          format: date-time
      - name: project_id
        in: path
        description: The UUID uniquely identifying the IRI project resource.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK - Returns a list of available IRI resources matching the
            request criteria.
          headers:
            Content-Location:
              description: "Identifies the specific resource for the representation\
                \ you just returned. It provides a URI that, at the time the response\
                \ was generated, would return the same representation if dereferenced\
                \ with GET."
              style: simple
              schema:
                type: string
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        "304":
          description: Not Modified - The requested resource was not modified.
          headers:
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
        "404":
          description: Not Found - The provider is not currently capable of serving
            resource models.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "400":
          description: Bad Request - The server due to malformed syntax or invalid
            query parameters could not understand the client’s request.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error - A generic error message given when
            an unexpected condition was encountered and a more specific message is
            not available.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/account/projects/{project_id}/project_allocations:
    get:
      tags:
      - IRI Account API
      - getProjectAllocationsByProject
      summary: Get a list of project allocations associated with the specified project
        id.
      description: Returns a list of IRI project allocations matching the query.
      operationId: getProjectAllocationsByProject
      parameters:
      - name: Accept
        in: header
        description: Provides media types that are acceptable for the response. At
          the moment application/json is the supported response encoding.
        required: false
        schema:
          type: string
          default: application/json
      - name: If-Modified-Since
        in: header
        description: The HTTP request may contain the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in RFC 1123 format.
        required: false
        schema:
          type: string
      - name: modified_since
        in: query
        description: A query parameter imitating the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in ISO 8601 format.
        required: false
        schema:
          type: string
          format: date-time
      - name: name
        in: query
        description: The name of the resource.
        required: false
        schema:
          type: string
      - name: offset
        in: query
        description: "An integer value specifying the starting number of resource\
          \ to return, where 0 is the first resource based on identifier sorted order."
        required: false
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: "An integer value specifying the maximum number of resources\
          \ to return, where 100 is the default limit.  Use offset query parameter\
          \ to navigate retrieval of complete set."
        required: false
        schema:
          type: integer
          default: 100
      - name: project_id
        in: path
        description: The UUID uniquely identifying the IRI project resource.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK - Returns a list of available IRI resources matching the
            request criteria.
          headers:
            Content-Location:
              description: "Identifies the specific resource for the representation\
                \ you just returned. It provides a URI that, at the time the response\
                \ was generated, would return the same representation if dereferenced\
                \ with GET."
              style: simple
              schema:
                type: string
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProjectAllocation"
        "304":
          description: Not Modified - The requested resource was not modified.
          headers:
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
        "400":
          description: Bad Request - The server due to malformed syntax or invalid
            query parameters could not understand the client’s request.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error - A generic error message given when
            an unexpected condition was encountered and a more specific message is
            not available.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/account/projects/{project_id}/project_allocations/{project_allocation_id}:
    get:
      tags:
      - IRI Account API
      - getProjectAllocationByProject
      summary: Get the project allocation associated with the specified project id
        and project allocation id.
      description: Returns the project allocation matching the specified identifiers.
      operationId: getProjectAllocationByProject
      parameters:
      - name: Accept
        in: header
        description: Provides media types that are acceptable for the response. At
          the moment application/json is the supported response encoding.
        required: false
        schema:
          type: string
          default: application/json
      - name: If-Modified-Since
        in: header
        description: The HTTP request may contain the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in RFC 1123 format.
        required: false
        schema:
          type: string
      - name: modified_since
        in: query
        description: A query parameter imitating the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in ISO 8601 format.
        required: false
        schema:
          type: string
          format: date-time
      - name: project_id
        in: path
        description: The UUID uniquely identifying the IRI project resource.
        required: true
        schema:
          type: string
      - name: project_allocation_id
        in: path
        description: The UUID uniquely identifying the IRI resource.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK - Returns a list of available IRI resources matching the
            request criteria.
          headers:
            Content-Location:
              description: "Identifies the specific resource for the representation\
                \ you just returned. It provides a URI that, at the time the response\
                \ was generated, would return the same representation if dereferenced\
                \ with GET."
              style: simple
              schema:
                type: string
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectAllocation"
        "304":
          description: Not Modified - The requested resource was not modified.
          headers:
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
        "404":
          description: Not Found - The provider is not currently capable of serving
            resource models.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "400":
          description: Bad Request - The server due to malformed syntax or invalid
            query parameters could not understand the client’s request.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error - A generic error message given when
            an unexpected condition was encountered and a more specific message is
            not available.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/account/projects/{project_id}/project_allocations/{project_allocation_id}/user_allocations:
    get:
      tags:
      - getUserAllocationsByProjectAllocation
      - IRI Account API
      summary: Get a list of user allocations associated with a facility.
      description: Returns a list of IRI user allocations matching the query.
      operationId: getUserAllocationsByProjectAllocation
      parameters:
      - name: Accept
        in: header
        description: Provides media types that are acceptable for the response. At
          the moment application/json is the supported response encoding.
        required: false
        schema:
          type: string
          default: application/json
      - name: If-Modified-Since
        in: header
        description: The HTTP request may contain the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in RFC 1123 format.
        required: false
        schema:
          type: string
      - name: modified_since
        in: query
        description: A query parameter imitating the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in ISO 8601 format.
        required: false
        schema:
          type: string
          format: date-time
      - name: name
        in: query
        description: The name of the resource.
        required: false
        schema:
          type: string
      - name: offset
        in: query
        description: "An integer value specifying the starting number of resource\
          \ to return, where 0 is the first resource based on identifier sorted order."
        required: false
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: "An integer value specifying the maximum number of resources\
          \ to return, where 100 is the default limit.  Use offset query parameter\
          \ to navigate retrieval of complete set."
        required: false
        schema:
          type: integer
          default: 100
      - name: project_id
        in: path
        description: The UUID uniquely identifying the IRI project resource.
        required: true
        schema:
          type: string
      - name: project_allocation_id
        in: path
        description: The UUID uniquely identifying the IRI project allocation resource.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK - Returns a list of available IRI resources matching the
            request criteria.
          headers:
            Content-Location:
              description: "Identifies the specific resource for the representation\
                \ you just returned. It provides a URI that, at the time the response\
                \ was generated, would return the same representation if dereferenced\
                \ with GET."
              style: simple
              schema:
                type: string
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserAllocation"
        "304":
          description: Not Modified - The requested resource was not modified.
          headers:
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
        "400":
          description: Bad Request - The server due to malformed syntax or invalid
            query parameters could not understand the client’s request.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error - A generic error message given when
            an unexpected condition was encountered and a more specific message is
            not available.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/account/projects/{project_id}/project_allocations/{project_allocation_id}/user_allocations/{user_allocation_id}:
    get:
      tags:
      - getUserAllocationByProjectAllocation
      - IRI Account API
      summary: Get the user allocation associated with the specified project and project
        allocation id.
      description: Returns the user allocation matching the specified project and
        project allocation id.
      operationId: getUserAllocationByProjectAllocation
      parameters:
      - name: Accept
        in: header
        description: Provides media types that are acceptable for the response. At
          the moment application/json is the supported response encoding.
        required: false
        schema:
          type: string
          default: application/json
      - name: If-Modified-Since
        in: header
        description: The HTTP request may contain the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in RFC 1123 format.
        required: false
        schema:
          type: string
      - name: modified_since
        in: query
        description: A query parameter imitating the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in ISO 8601 format.
        required: false
        schema:
          type: string
          format: date-time
      - name: project_id
        in: path
        description: The UUID uniquely identifying the IRI project resource.
        required: true
        schema:
          type: string
      - name: project_allocation_id
        in: path
        description: The UUID uniquely identifying the IRI project allocation resource.
        required: true
        schema:
          type: string
      - name: user_allocation_id
        in: path
        description: The UUID uniquely identifying the IRI user allocation resource.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK - Returns a list of available IRI resources matching the
            request criteria.
          headers:
            Content-Location:
              description: "Identifies the specific resource for the representation\
                \ you just returned. It provides a URI that, at the time the response\
                \ was generated, would return the same representation if dereferenced\
                \ with GET."
              style: simple
              schema:
                type: string
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAllocation"
        "304":
          description: Not Modified - The requested resource was not modified.
          headers:
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
        "404":
          description: Not Found - The provider is not currently capable of serving
            resource models.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "400":
          description: Bad Request - The server due to malformed syntax or invalid
            query parameters could not understand the client’s request.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error - A generic error message given when
            an unexpected condition was encountered and a more specific message is
            not available.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/account/project_allocations:
    get:
      tags:
      - IRI Account API
      - getProjectAllocations
      summary: Get a list of project allocations associated with a facility.
      description: Returns a list of IRI project allocations matching the query.
      operationId: getProjectAllocations
      parameters:
      - name: Accept
        in: header
        description: Provides media types that are acceptable for the response. At
          the moment application/json is the supported response encoding.
        required: false
        schema:
          type: string
          default: application/json
      - name: If-Modified-Since
        in: header
        description: The HTTP request may contain the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in RFC 1123 format.
        required: false
        schema:
          type: string
      - name: modified_since
        in: query
        description: A query parameter imitating the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in ISO 8601 format.
        required: false
        schema:
          type: string
          format: date-time
      - name: name
        in: query
        description: The name of the resource.
        required: false
        schema:
          type: string
      - name: offset
        in: query
        description: "An integer value specifying the starting number of resource\
          \ to return, where 0 is the first resource based on identifier sorted order."
        required: false
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: "An integer value specifying the maximum number of resources\
          \ to return, where 100 is the default limit.  Use offset query parameter\
          \ to navigate retrieval of complete set."
        required: false
        schema:
          type: integer
          default: 100
      responses:
        "200":
          description: OK - Returns a list of available IRI resources matching the
            request criteria.
          headers:
            Content-Location:
              description: "Identifies the specific resource for the representation\
                \ you just returned. It provides a URI that, at the time the response\
                \ was generated, would return the same representation if dereferenced\
                \ with GET."
              style: simple
              schema:
                type: string
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProjectAllocation"
        "304":
          description: Not Modified - The requested resource was not modified.
          headers:
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
        "400":
          description: Bad Request - The server due to malformed syntax or invalid
            query parameters could not understand the client’s request.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error - A generic error message given when
            an unexpected condition was encountered and a more specific message is
            not available.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/account/project_allocations/{project_allocation_id}:
    get:
      tags:
      - IRI Account API
      - getProjectAllocation
      summary: Get the project allocation associated with the specified id.
      description: Returns the project allocation matching the specified id.
      operationId: getProjectAllocation
      parameters:
      - name: Accept
        in: header
        description: Provides media types that are acceptable for the response. At
          the moment application/json is the supported response encoding.
        required: false
        schema:
          type: string
          default: application/json
      - name: If-Modified-Since
        in: header
        description: The HTTP request may contain the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in RFC 1123 format.
        required: false
        schema:
          type: string
      - name: modified_since
        in: query
        description: A query parameter imitating the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in ISO 8601 format.
        required: false
        schema:
          type: string
          format: date-time
      - name: project_allocation_id
        in: path
        description: The UUID uniquely identifying the IRI project allocation resource.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK - Returns a list of available IRI resources matching the
            request criteria.
          headers:
            Content-Location:
              description: "Identifies the specific resource for the representation\
                \ you just returned. It provides a URI that, at the time the response\
                \ was generated, would return the same representation if dereferenced\
                \ with GET."
              style: simple
              schema:
                type: string
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectAllocation"
        "304":
          description: Not Modified - The requested resource was not modified.
          headers:
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
        "404":
          description: Not Found - The provider is not currently capable of serving
            resource models.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "400":
          description: Bad Request - The server due to malformed syntax or invalid
            query parameters could not understand the client’s request.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error - A generic error message given when
            an unexpected condition was encountered and a more specific message is
            not available.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/account/capabilities:
    get:
      tags:
      - IRI Account API
      - getCapabilities
      summary: Get a list of capabilities associated with a facility.
      description: Returns a list of IRI resources matching the query.
      operationId: getCapabilities
      parameters:
      - name: Accept
        in: header
        description: Provides media types that are acceptable for the response. At
          the moment application/json is the supported response encoding.
        required: false
        schema:
          type: string
          default: application/json
      - name: If-Modified-Since
        in: header
        description: The HTTP request may contain the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in RFC 1123 format.
        required: false
        schema:
          type: string
      - name: modified_since
        in: query
        description: A query parameter imitating the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in ISO 8601 format.
        required: false
        schema:
          type: string
          format: date-time
      - name: name
        in: query
        description: The name of the resource.
        required: false
        schema:
          type: string
      - name: offset
        in: query
        description: "An integer value specifying the starting number of resource\
          \ to return, where 0 is the first resource based on identifier sorted order."
        required: false
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: "An integer value specifying the maximum number of resources\
          \ to return, where 100 is the default limit.  Use offset query parameter\
          \ to navigate retrieval of complete set."
        required: false
        schema:
          type: integer
          default: 100
      responses:
        "200":
          description: OK - Returns a list of available IRI resources matching the
            request criteria.
          headers:
            Content-Location:
              description: "Identifies the specific resource for the representation\
                \ you just returned. It provides a URI that, at the time the response\
                \ was generated, would return the same representation if dereferenced\
                \ with GET."
              style: simple
              schema:
                type: string
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Capability"
        "304":
          description: Not Modified - The requested resource was not modified.
          headers:
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
        "400":
          description: Bad Request - The server due to malformed syntax or invalid
            query parameters could not understand the client’s request.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error - A generic error message given when
            an unexpected condition was encountered and a more specific message is
            not available.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/account/capabilities/{capability_id}:
    get:
      tags:
      - getCapability
      - IRI Account API
      summary: Get the capability associated with the specified id.
      description: Returns the capability matching the specified id.
      operationId: getCapability
      parameters:
      - name: Accept
        in: header
        description: Provides media types that are acceptable for the response. At
          the moment application/json is the supported response encoding.
        required: false
        schema:
          type: string
          default: application/json
      - name: If-Modified-Since
        in: header
        description: The HTTP request may contain the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in RFC 1123 format.
        required: false
        schema:
          type: string
      - name: modified_since
        in: query
        description: A query parameter imitating the If-Modified-Since header requesting
          all models with a last modified time after the specified date. The date
          must be specified in ISO 8601 format.
        required: false
        schema:
          type: string
          format: date-time
      - name: capability_id
        in: path
        description: The UUID uniquely identifying the IRI capability resource.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK - Returns a list of available IRI resources matching the
            request criteria.
          headers:
            Content-Location:
              description: "Identifies the specific resource for the representation\
                \ you just returned. It provides a URI that, at the time the response\
                \ was generated, would return the same representation if dereferenced\
                \ with GET."
              style: simple
              schema:
                type: string
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Capability"
        "304":
          description: Not Modified - The requested resource was not modified.
          headers:
            Last-Modified:
              description: The HTTP response should contain the Last-Modified header
                with the date set to the RFC 1123 format of the resource's last modified
                time.
              style: simple
              schema:
                type: string
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
        "404":
          description: Not Found - The provider is not currently capable of serving
            resource models.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "400":
          description: Bad Request - The server due to malformed syntax or invalid
            query parameters could not understand the client’s request.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden - Requester is not authorized to access the requested
            resource.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error - A generic error message given when
            an unexpected condition was encountered and a more specific message is
            not available.
          headers:
            Content-Type:
              description: Provides media type used to encode the result of the operation
                based on those values provided in the Accept request header. At the
                moment application/json is the only supported Content-Type encoding.
              style: simple
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Discovery:
      type: object
      description: Defines discovery resource for modelling meta-data.
      properties:
        id:
          type: string
          description: Identifier associated with resource at the target link.
          example: facility
        version:
          type: string
          description: Version of the resource based on API version
          example: v1
        _links:
          type: array
          description: A link to the resources.  Target link will be in SELF relationship.
          items:
            $ref: "#/components/schemas/Link"
    Link:
      type: object
      description: "Link represents a hyperlink with relation (rel), URL (href), and\
        \ type."
      properties:
        rel:
          type: string
          description: The relationship type of the link
          example: self
        href:
          type: string
          format: uri
          description: The hyperlink reference (URI)
          example: https://example.com/facility
        type:
          type: string
          description: The media type of the linked resource
          example: application/json
      required:
      - href
    Error:
      type: object
      description: "Error structure for REST interface based on RFC 9457, \"Problem\
        \ Details for HTTP APIs.\""
      properties:
        type:
          type: string
          format: uri
          default: about:blank
          description: A URI reference that identifies the problem type.
          example: https://example.com/notFound
        title:
          type: string
          description: "A short, human-readable summary of the problem type."
          example: Not Found
        status:
          type: integer
          format: int32
          description: The HTTP status code generated by the origin server for this
            occurrence of the problem.
          example: 404
          maximum: 599
          minimum: 100
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of
            the problem.
          example: Descriptive text.
        instance:
          type: string
          format: uri
          description: A URI reference that identifies the specific occurrence of
            the problem.
          example: http://localhost:8081/api/v1/status/events/f9d6e700-1807-45bd-9a52-e81c32d40c5a
      required:
      - instance
      - status
      - type
    Resource:
      type: object
      description: "A Resource is an object that either offers a service to the end\
        \ user, or supports a resource that offers a service to the end user.  This\
        \ resource will have an associated operational state, events, and incidents."
      properties:
        id:
          type: string
          description: The unique identifier for the object.  Typically a UUID or
            URN to provide global uniqueness across facilities.
          example: 09a22593-2be8-46f6-ae54-2904b04e13a4
        self_uri:
          type: string
          format: uri
          description: A hyperlink reference (URI) to this resource (self)
          example: https://example.com/api/v1/status/events/03bdbf77-6f29-4f66-9809-7f4f77098171
        name:
          type: string
          description: The long name of the resource.
          example: Lawrence Berkeley National Laboratory
        description:
          type: string
          description: A description of the resource.
          example: Lawrence Berkeley National Laboratory is charged with conducting
            unclassified research across a wide range of scientific disciplines.
        last_modified:
          type: string
          format: date-time
          description: The date this resource was last modified. Format follows the
            ISO 8601 standard with timezone offsets.
          example: 2025-03-11T07:28:24.000−00:00
        resource_type:
          type: string
          description: The type of resource.
          enum:
          - website
          - service
          - compute
          - system
          - storage
          - network
          - unknown
          example: system
        capability_uris:
          type: array
          items:
            type: string
            format: uri
            description: Hyperlink references (URIs) to capabilities this resource
              provides (hasCapability).
            example: https://example.com/api/v1/account/capabilities/b1ce8cd1-e8b8-4f77-b2ab-152084c70281
        current_status:
          type: string
          description: The current status of this resource at time of query.
          enum:
          - up
          - degraded
          - down
          - unknown
          example: up
        located_at_uri:
          type: string
          format: uri
          description: A hyperlink reference (URI) to the Site containing this Resource
            (locatedAt).
          example: https://example.com/api/v1/facility/sites/ce2bbc49-ba63-4711-8f36-43b74ec2fe45
        member_of_uri:
          type: string
          format: uri
          description: A hyperlink reference (URI) to facility managing this Resource
            (memberOf).
          example: https://example.com/api/v1/facility
      required:
      - current_status
      - id
      - last_modified
      - name
      - resource_type
      - self_uri
    Incident:
      type: object
      description: "An Incident represents a discrete occurrence, planned or unplanned,\
        \ that actually or potentially affects the availability, performance, integrity,\
        \ or security of one or more Resources at a given Facility. It serves as a\
        \ high-level grouping construct for aggregating and tracking related Events\
        \ over time and across multiple system components."
      properties:
        id:
          type: string
          description: The unique identifier for the object.  Typically a UUID or
            URN to provide global uniqueness across facilities.
          example: 09a22593-2be8-46f6-ae54-2904b04e13a4
        self_uri:
          type: string
          format: uri
          description: A hyperlink reference (URI) to this resource (self)
          example: https://example.com/api/v1/status/events/03bdbf77-6f29-4f66-9809-7f4f77098171
        name:
          type: string
          description: The long name of the resource.
          example: Lawrence Berkeley National Laboratory
        description:
          type: string
          description: A description of the resource.
          example: Lawrence Berkeley National Laboratory is charged with conducting
            unclassified research across a wide range of scientific disciplines.
        last_modified:
          type: string
          format: date-time
          description: The date this resource was last modified. Format follows the
            ISO 8601 standard with timezone offsets.
          example: 2025-03-11T07:28:24.000−00:00
        status:
          type: string
          description: The status of the resource associated with this incident.
          enum:
          - up
          - degraded
          - down
          - unknown
          example: down
        type:
          type: string
          description: The type of incident.
          enum:
          - planned
          - unplanned
          - reservation
          example: planned
        start:
          type: string
          format: date-time
          description: "The date this incident started, or is predicted to start.\
            \ Format follows the ISO 8601 standard with timezone offsets."
          example: 2023-10-17T11:02:31.690-00:00
        end:
          type: string
          format: date-time
          description: "The date this incident ended, or is predicted to end.  Format\
            \ follows the ISO 8601 standard with timezone offsets."
          example: 2023-10-19T11:02:31.690-00:00
        resolution:
          type: string
          default: pending
          description: The resolution for this incident.
          enum:
          - unresolved
          - cancelled
          - completed
          - extended
          - pending
          example: pending
        resource_uris:
          type: array
          items:
            type: string
            format: uri
            description: A hyperlink reference (URI) to the Resources impacted by
              this Incident (mayImpact).
            example: https://example.com/api/v1/status/resources/03bdbf77-6f29-4f66-9809-7f4f77098171
        event_uris:
          type: array
          items:
            type: string
            format: uri
            description: A hyperlink reference (URI) to the Event associated with
              this Incident (hasEvent).
            example: https://example.com/api/v1/status/events/03bdbf77-6f29-4f66-9809-7f4f77098171
      required:
      - id
      - last_modified
      - name
      - self_uri
    Event:
      type: object
      description: "An Event represents a discrete, timestamped occurrence that reflects\
        \ a change in state, condition, or behavior of a Resource, typically within\
        \ the context of an ongoing Incident. Events provide the fine-grained details\
        \ necessary to understand the progression and impact of an Incident, serving\
        \ as both diagnostic data and a lightweight status log of relevant activity."
      properties:
        id:
          type: string
          description: The unique identifier for the object.  Typically a UUID or
            URN to provide global uniqueness across facilities.
          example: 09a22593-2be8-46f6-ae54-2904b04e13a4
        self_uri:
          type: string
          format: uri
          description: A hyperlink reference (URI) to this resource (self)
          example: https://example.com/api/v1/status/events/03bdbf77-6f29-4f66-9809-7f4f77098171
        name:
          type: string
          description: The long name of the resource.
          example: Lawrence Berkeley National Laboratory
        description:
          type: string
          description: A description of the resource.
          example: Lawrence Berkeley National Laboratory is charged with conducting
            unclassified research across a wide range of scientific disciplines.
        last_modified:
          type: string
          format: date-time
          description: The date this resource was last modified. Format follows the
            ISO 8601 standard with timezone offsets.
          example: 2025-03-11T07:28:24.000−00:00
        status:
          type: string
          description: The status of the resource associated with this event.
          enum:
          - up
          - degraded
          - down
          - unknown
          example: down
        occurred_at:
          type: string
          format: date-time
          description: The date this event occurred.  Format follows the ISO 8601
            standard with timezone offsets.
          example: 2025-03-11T07:28:24.000−00:00
        resource_uri:
          type: string
          format: uri
          description: A hyperlink reference (URI) to the Resource associated with
            this Event (impacts).
          example: https://example.com/api/v1/status/resources/03bdbf77-6f29-4f66-9809-7f4f77098171
        incident_uri:
          type: string
          format: uri
          description: A hyperlink reference (URI) to the Incident associated with
            this Event (generatedBy).
          example: https://example.com/api/v1/status/incidents/03bdbf77-6f29-4f66-9809-7f4f77098171
      required:
      - id
      - last_modified
      - name
      - self_uri
    Facility:
      type: object
      description: "A specialized research facility funded and operated by the U.S.\
        \ Department of Energy that provides unique scientific tools, expertise, and\
        \ infrastructure for researchers from across academia, industry, and government.\
        \  In a more general definition, a Facility offers Resources to scientific\
        \ workflows for programmatic consumption."
      properties:
        id:
          type: string
          description: The unique identifier for the object.  Typically a UUID or
            URN to provide global uniqueness across facilities.
          example: 09a22593-2be8-46f6-ae54-2904b04e13a4
        self_uri:
          type: string
          format: uri
          description: A hyperlink reference (URI) to this resource (self)
          example: https://example.com/api/v1/status/events/03bdbf77-6f29-4f66-9809-7f4f77098171
        name:
          type: string
          description: The long name of the resource.
          example: Lawrence Berkeley National Laboratory
        description:
          type: string
          description: A description of the resource.
          example: Lawrence Berkeley National Laboratory is charged with conducting
            unclassified research across a wide range of scientific disciplines.
        last_modified:
          type: string
          format: date-time
          description: The date this resource was last modified. Format follows the
            ISO 8601 standard with timezone offsets.
          example: 2025-03-11T07:28:24.000−00:00
        short_name:
          type: string
          description: The short name of the resource.
          example: LBNL
        organization_name:
          type: string
          description: The name of the organization hosting the facility.
          example: Lawrence Berkeley National Laboratory
        support_uri:
          type: string
          format: uri
          description: A hyperlink reference (URI) to the support website for this
            Facility (supportURL).
          example: https://help.nersc.gov/
        site_uris:
          type: array
          items:
            type: string
            format: uri
            description: A hyperlink reference (URI) to a Site.  A Facility can be
              hosted at zero or more physical Sites (hostedAt).
        location_uris:
          type: array
          items:
            type: string
            format: uri
            description: A hyperlink reference (URI) to a Locations.  A Facility can
              be associated with zero or more geographical Locations (hasLocation).
        resource_uris:
          type: array
          items:
            type: string
            format: uri
            description: A hyperlink reference (URI) to a Resources contained within
              this Facility (hasResource).
        event_uris:
          type: array
          items:
            type: string
            format: uri
            description: A hyperlink reference (URI) to an Events that has occurred
              within this Facility (hasEvent).
        incident_uris:
          type: array
          items:
            type: string
            format: uri
            description: "A hyperlink reference (URI) to an Incidents that has occurred,\
              \ or may occur within this Facility (hasIncident)."
        capability_uris:
          type: array
          items:
            type: string
            format: uri
            description: A hyperlink reference (URI) to a Capability associated with
              allocations.
        project_uris:
          type: array
          items:
            type: string
            format: uri
            description: A hyperlink reference (URI) to a Project associated with
              allocations.
        project_allocation_uris:
          type: array
          items:
            type: string
            format: uri
            description: A hyperlink reference (URI) to a Project Allocation.
        user_allocation_uris:
          type: array
          items:
            type: string
            format: uri
            description: A hyperlink reference (URI) to a User Allocation.
      required:
      - id
      - last_modified
      - name
      - self_uri
    Site:
      type: object
      description: |-
        A Site represents the physical and administrative context in which a Resource is deployed and operated. It is associated with a geographic or network location where one or more resources reside and serves as the anchor point for associating these resources with their broader infrastructure and organizational relationships.

        The location of a resource that has an associated physical location and an operating organization.
      properties:
        id:
          type: string
          description: The unique identifier for the object.  Typically a UUID or
            URN to provide global uniqueness across facilities.
          example: 09a22593-2be8-46f6-ae54-2904b04e13a4
        self_uri:
          type: string
          format: uri
          description: A hyperlink reference (URI) to this resource (self)
          example: https://example.com/api/v1/status/events/03bdbf77-6f29-4f66-9809-7f4f77098171
        name:
          type: string
          description: The long name of the resource.
          example: Lawrence Berkeley National Laboratory
        description:
          type: string
          description: A description of the resource.
          example: Lawrence Berkeley National Laboratory is charged with conducting
            unclassified research across a wide range of scientific disciplines.
        last_modified:
          type: string
          format: date-time
          description: The date this resource was last modified. Format follows the
            ISO 8601 standard with timezone offsets.
          example: 2025-03-11T07:28:24.000−00:00
        short_name:
          type: string
          description: The short name of the resource.
          example: LBNL
        operating_organization:
          type: string
          description: The name of the organization operating the site.
          example: Lawrence Berkeley National Laboratory
        location_uri:
          type: string
          format: uri
          description: A hyperlink reference (URI) to the location associated with
            this Site (hasLocation).
          example: https://example.com/api/v1/status/locations/03bdbf77-6f29-4f66-9809-7f4f77098171
        resource_uris:
          type: array
          items:
            type: string
            format: uri
            description: A hyperlink reference (URI) to a Resource located at this
              Site (hasResource).
            example: https://example.com/api/v1/status/resources/12345f77-6f29-4f66-9809-7f4f77098333
      required:
      - id
      - last_modified
      - name
      - self_uri
    Location:
      type: object
      description: "A Location models the geographic, geopolitical, or spatial context\
        \ associated with a Site that may contain zero or more Resources. It serves\
        \ as a foundational concept for expressing where resources physically exist,\
        \ are operated, or are logically grouped, enabling meaningful organization\
        \ and visualization.  Locations are reusable entities that may be shared across\
        \ multiple Sites or Facilities."
      properties:
        id:
          type: string
          description: The unique identifier for the object.  Typically a UUID or
            URN to provide global uniqueness across facilities.
          example: 09a22593-2be8-46f6-ae54-2904b04e13a4
        self_uri:
          type: string
          format: uri
          description: A hyperlink reference (URI) to this resource (self)
          example: https://example.com/api/v1/status/events/03bdbf77-6f29-4f66-9809-7f4f77098171
        name:
          type: string
          description: The long name of the resource.
          example: Lawrence Berkeley National Laboratory
        description:
          type: string
          description: A description of the resource.
          example: Lawrence Berkeley National Laboratory is charged with conducting
            unclassified research across a wide range of scientific disciplines.
        last_modified:
          type: string
          format: date-time
          description: The date this resource was last modified. Format follows the
            ISO 8601 standard with timezone offsets.
          example: 2025-03-11T07:28:24.000−00:00
        short_name:
          type: string
          description: The short name of the resource.
          example: LBNL
        country_name:
          type: string
          description: The country name of the location.
          example: United States of America
        locality_name:
          type: string
          description: The city or locality name of the location.
          example: Berkeley
        state_or_province_name:
          type: string
          description: The state or province name of the location.
          example: California
        street_address:
          type: string
          description: The street address of the location.
          example: 1
        unlocode:
          type: string
          description: The United Nations code for trade and transport locations.
          example: US JBK
        altitude:
          type: number
          format: double
          description: The altitude of the location.
          example: 240
        latitude:
          type: number
          format: double
          description: The latitude of the location.
          example: 37.87492
        longitude:
          type: number
          format: double
          description: The longitude of the location.
          example: -122.2529
        site_uris:
          type: array
          items:
            type: string
            format: uri
            description: A hyperlink reference (URI) to a Site located at this Location
              (hasSite).
            example: https://example.com/api/v1/status/sites/03bdbf77-6f29-4f66-9809-7f4f77098171
      required:
      - id
      - last_modified
      - name
      - self_uri
    AllocationEntry:
      type: object
      description: Defines an allocation.
      properties:
        allocation:
          type: number
          format: float
          description: How much this allocation can spend.
          example: 123.45
        usage:
          type: number
          format: float
          description: How much this allocation has spent.
          example: 123.45
        unit:
          type: string
          description: The unit of this allocation.
          enum:
          - node_hours
          - bytes
          - inodes
          example: bytes
          title: AllocationUnit
    UserAllocation:
      type: object
      description: Defines a user's allocation in a project.  This allocation is a
        piece of the project's allocation.
      properties:
        id:
          type: string
          description: The unique identifier for the object.  Typically a UUID or
            URN to provide global uniqueness across facilities.
          example: 09a22593-2be8-46f6-ae54-2904b04e13a4
        self_uri:
          type: string
          format: uri
          description: A hyperlink reference (URI) to this resource (self)
          example: https://example.com/api/v1/status/events/03bdbf77-6f29-4f66-9809-7f4f77098171
        name:
          type: string
          description: The long name of the resource.
          example: Lawrence Berkeley National Laboratory
        description:
          type: string
          description: A description of the resource.
          example: Lawrence Berkeley National Laboratory is charged with conducting
            unclassified research across a wide range of scientific disciplines.
        last_modified:
          type: string
          format: date-time
          description: The date this resource was last modified. Format follows the
            ISO 8601 standard with timezone offsets.
          example: 2025-03-11T07:28:24.000−00:00
        user_id:
          type: string
          description: The user identifier associated with the allocation (hasUser).
        entries:
          type: array
          items:
            $ref: "#/components/schemas/AllocationEntry"
            description: An AllocationEntry associated with this user allocation (hasAllocationEntry).
        project_allocation_uri:
          type: string
          format: uri
          description: A hyperlink reference (URI) to the associated project allocation
            (hasProjectAllocation).
          example: https://example.com/api/v1/account/project_allocations/03bdbf77-6f29-4f66-9809-7f4f77098171
      required:
      - id
      - last_modified
      - name
      - self_uri
    Project:
      type: object
      description: A project and its list of users at a facility.
      properties:
        id:
          type: string
          description: The unique identifier for the object.  Typically a UUID or
            URN to provide global uniqueness across facilities.
          example: 09a22593-2be8-46f6-ae54-2904b04e13a4
        self_uri:
          type: string
          format: uri
          description: A hyperlink reference (URI) to this resource (self)
          example: https://example.com/api/v1/status/events/03bdbf77-6f29-4f66-9809-7f4f77098171
        name:
          type: string
          description: The long name of the resource.
          example: Lawrence Berkeley National Laboratory
        description:
          type: string
          description: A description of the resource.
          example: Lawrence Berkeley National Laboratory is charged with conducting
            unclassified research across a wide range of scientific disciplines.
        last_modified:
          type: string
          format: date-time
          description: The date this resource was last modified. Format follows the
            ISO 8601 standard with timezone offsets.
          example: 2025-03-11T07:28:24.000−00:00
        user_ids:
          type: array
          items:
            type: string
            description: A user identifier associated with this project (hasUser).
            example: BillyJoeBob
          uniqueItems: true
        project_allocation_uris:
          type: array
          items:
            type: string
            format: uri
            description: A list of hyperlink reference (URI) to zero or more ProjectAllocations
              (hasProjectAllocation).
      required:
      - id
      - last_modified
      - name
      - self_uri
    ProjectAllocation:
      type: object
      description: "Defines a project's allocation for a capability (aka. repo). \
        \ This allocation is a piece of the total allocation for the capability (eg.\
        \ 5% of the total node hours of Perlmutter GPU nodes).  A project would at\
        \ least have a storage and job repos, maybe more than 1 of each."
      properties:
        id:
          type: string
          description: The unique identifier for the object.  Typically a UUID or
            URN to provide global uniqueness across facilities.
          example: 09a22593-2be8-46f6-ae54-2904b04e13a4
        self_uri:
          type: string
          format: uri
          description: A hyperlink reference (URI) to this resource (self)
          example: https://example.com/api/v1/status/events/03bdbf77-6f29-4f66-9809-7f4f77098171
        name:
          type: string
          description: The long name of the resource.
          example: Lawrence Berkeley National Laboratory
        description:
          type: string
          description: A description of the resource.
          example: Lawrence Berkeley National Laboratory is charged with conducting
            unclassified research across a wide range of scientific disciplines.
        last_modified:
          type: string
          format: date-time
          description: The date this resource was last modified. Format follows the
            ISO 8601 standard with timezone offsets.
          example: 2025-03-11T07:28:24.000−00:00
        entries:
          type: array
          description: Allocation entries associated with this user allocation (hasAllocationEntry).
          items:
            $ref: "#/components/schemas/AllocationEntry"
        project_uri:
          type: string
          format: uri
          description: A hyperlink reference (URI) to the associated project (hasProject).
          example: https://example.com/api/v1/account/projects/03bdbf77-6f29-4f66-9809-7f4f77098171
        capability_uri:
          type: string
          format: uri
          description: A hyperlink reference (URI) to the associated capability (hasCapability).
          example: https://example.com/api/v1/account/capabilities/03bdbf77-6f29-4f66-9809-7f4f77098171
        user_allocation_uris:
          type: array
          items:
            type: string
            format: uri
            description: A hyperlink reference (URI) to a UserAllocation (hasUserAllocation).
      required:
      - id
      - last_modified
      - name
      - self_uri
    Capability:
      type: object
      description: "Defines an aspect of a resource that can have an allocation. For\
        \ example,  Perlmutter nodes with GPUs. For some resources at a facility,\
        \ this will be 1 to 1 with the resource.  It is a way to further subdivide\
        \ a resource into allocatable sub-resources.  The word  \"capability\" is\
        \ also known to users as something they need for a job to run (eg. gpu)."
      properties:
        id:
          type: string
          description: The unique identifier for the object.  Typically a UUID or
            URN to provide global uniqueness across facilities.
          example: 09a22593-2be8-46f6-ae54-2904b04e13a4
        self_uri:
          type: string
          format: uri
          description: A hyperlink reference (URI) to this resource (self)
          example: https://example.com/api/v1/status/events/03bdbf77-6f29-4f66-9809-7f4f77098171
        name:
          type: string
          description: The long name of the resource.
          example: Lawrence Berkeley National Laboratory
        description:
          type: string
          description: A description of the resource.
          example: Lawrence Berkeley National Laboratory is charged with conducting
            unclassified research across a wide range of scientific disciplines.
        last_modified:
          type: string
          format: date-time
          description: The date this resource was last modified. Format follows the
            ISO 8601 standard with timezone offsets.
          example: 2025-03-11T07:28:24.000−00:00
        units:
          type: array
          description: The list of AllocationUnit associated with this capability.
          example: node_hours
          items:
            type: string
            description: "Defines an aspect of a resource that can have an allocation.\
              \ For example,  Perlmutter nodes with GPUs. For some resources at a\
              \ facility, this will be 1 to 1 with the resource.  It is a way to subdivide\
              \ a resource into allocatable sub-resources further.  The word  \"capability\"\
              \ is also known to users as something they need for a job to run. (eg.\
              \ gpu)"
            enum:
            - node_hours
            - bytes
            - inodes
            title: AllocationUnit
      required:
      - id
      - last_modified
      - name
      - self_uri
      title: Capability
